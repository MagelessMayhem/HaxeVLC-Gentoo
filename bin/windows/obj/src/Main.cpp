// Generated by Haxe 3.4.3
#include <hxcpp.h>

#ifndef INCLUDED_Main
#include <Main.h>
#endif
#ifndef INCLUDED_Sys
#include <Sys.h>
#endif
#ifndef INCLUDED_openfl_display_Bitmap
#include <openfl/display/Bitmap.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_IShaderDrawable
#include <openfl/display/IShaderDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_vlc_VlcBitmap
#include <vlc/VlcBitmap.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_e47a9afac0942eb9_11_new,"Main","new",0x6616a5cb,"Main.new","Main.hx",11,0x087e5c05)
HX_LOCAL_STACK_FRAME(_hx_pos_e47a9afac0942eb9_36_checkFile,"Main","checkFile",0x7824cf0f,"Main.checkFile","Main.hx",36,0x087e5c05)
HX_LOCAL_STACK_FRAME(_hx_pos_e47a9afac0942eb9_50_onVlcVideoReady,"Main","onVlcVideoReady",0x4ae0a601,"Main.onVlcVideoReady","Main.hx",50,0x087e5c05)
HX_LOCAL_STACK_FRAME(_hx_pos_e47a9afac0942eb9_54_onVLCPlay,"Main","onVLCPlay",0x0f44514d,"Main.onVLCPlay","Main.hx",54,0x087e5c05)
HX_LOCAL_STACK_FRAME(_hx_pos_e47a9afac0942eb9_58_onVLCPause,"Main","onVLCPause",0x454ca17d,"Main.onVLCPause","Main.hx",58,0x087e5c05)
HX_LOCAL_STACK_FRAME(_hx_pos_e47a9afac0942eb9_62_onVLCResume,"Main","onVLCResume",0x76c0d546,"Main.onVLCResume","Main.hx",62,0x087e5c05)
HX_LOCAL_STACK_FRAME(_hx_pos_e47a9afac0942eb9_66_onVLCStop,"Main","onVLCStop",0x1146135b,"Main.onVLCStop","Main.hx",66,0x087e5c05)
HX_LOCAL_STACK_FRAME(_hx_pos_e47a9afac0942eb9_70_onVLCSeek,"Main","onVLCSeek",0x113aa8d1,"Main.onVLCSeek","Main.hx",70,0x087e5c05)
HX_LOCAL_STACK_FRAME(_hx_pos_e47a9afac0942eb9_74_onVLCComplete,"Main","onVLCComplete",0x46a94492,"Main.onVLCComplete","Main.hx",74,0x087e5c05)
HX_LOCAL_STACK_FRAME(_hx_pos_e47a9afac0942eb9_78_onVLCProgress,"Main","onVLCProgress",0x4d0c3b86,"Main.onVLCProgress","Main.hx",78,0x087e5c05)

void Main_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_e47a9afac0942eb9_11_new)
HXLINE(  12)		super::__construct();
HXLINE(  14)		 ::vlc::VlcBitmap vlcBitmap =  ::vlc::VlcBitmap_obj::__alloc( HX_CTX );
HXLINE(  15)		vlcBitmap->onVideoReady = this->onVlcVideoReady_dyn();
HXLINE(  16)		vlcBitmap->onPlay = this->onVLCPlay_dyn();
HXLINE(  17)		vlcBitmap->onPause = this->onVLCPause_dyn();
HXLINE(  18)		vlcBitmap->onResume = this->onVLCResume_dyn();
HXLINE(  19)		vlcBitmap->onStop = this->onVLCStop_dyn();
HXLINE(  20)		vlcBitmap->onSeek = this->onVLCSeek_dyn();
HXLINE(  21)		vlcBitmap->onComplete = this->onVLCComplete_dyn();
HXLINE(  22)		vlcBitmap->onProgress = this->onVLCProgress_dyn();
HXLINE(  23)		vlcBitmap->set_volume((int)1);
HXLINE(  24)		vlcBitmap->repeat = (int)-1;
HXLINE(  25)		this->addChild(vlcBitmap);
HXLINE(  27)		vlcBitmap->inWindow = false;
HXLINE(  28)		vlcBitmap->fullscreen = true;
HXLINE(  30)		vlcBitmap->play(this->checkFile(HX_("SampleVideo.mp4",54,88,9a,be)));
            	}

Dynamic Main_obj::__CreateEmpty() { return new Main_obj; }

void *Main_obj::_hx_vtable = 0;

Dynamic Main_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Main_obj > _hx_result = new Main_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Main_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x19c29573) {
		if (inClassId<=(int)0x17120186) {
			if (inClassId<=(int)0x0ddfced7) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0ddfced7;
			} else {
				return inClassId==(int)0x17120186;
			}
		} else {
			return inClassId==(int)0x19c29573;
		}
	} else {
		if (inClassId<=(int)0x332f6459) {
			return inClassId==(int)0x1b123bf8 || inClassId==(int)0x332f6459;
		} else {
			return inClassId==(int)0x3f2b00af;
		}
	}
}

::String Main_obj::checkFile(::String fileName){
            	HX_STACKFRAME(&_hx_pos_e47a9afac0942eb9_36_checkFile)
HXLINE(  37)		::String pDir = HX_("",00,00,00,00);
HXLINE(  38)		::String appDir = ((HX_("file:///",91,ef,e4,54) + ::Sys_obj::getCwd()) + HX_("/",2f,00,00,00));
HXLINE(  39)		if ((fileName.indexOf(HX_(":",3a,00,00,00),null()) == (int)-1)) {
HXLINE(  40)			pDir = appDir;
            		}
            		else {
HXLINE(  41)			bool _hx_tmp;
HXDLIN(  41)			if ((fileName.indexOf(HX_("file://",de,92,3b,ff),null()) != (int)-1)) {
HXLINE(  41)				_hx_tmp = (fileName.indexOf(HX_("http",88,9b,16,45),null()) == (int)-1);
            			}
            			else {
HXLINE(  41)				_hx_tmp = true;
            			}
HXDLIN(  41)			if (_hx_tmp) {
HXLINE(  42)				pDir = HX_("file:///",91,ef,e4,54);
            			}
            		}
HXLINE(  44)		return (pDir + fileName);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Main_obj,checkFile,return )

void Main_obj::onVlcVideoReady(){
            	HX_STACKFRAME(&_hx_pos_e47a9afac0942eb9_50_onVlcVideoReady)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Main_obj,onVlcVideoReady,(void))

void Main_obj::onVLCPlay(){
            	HX_STACKFRAME(&_hx_pos_e47a9afac0942eb9_54_onVLCPlay)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Main_obj,onVLCPlay,(void))

void Main_obj::onVLCPause(){
            	HX_STACKFRAME(&_hx_pos_e47a9afac0942eb9_58_onVLCPause)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Main_obj,onVLCPause,(void))

void Main_obj::onVLCResume(){
            	HX_STACKFRAME(&_hx_pos_e47a9afac0942eb9_62_onVLCResume)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Main_obj,onVLCResume,(void))

void Main_obj::onVLCStop(){
            	HX_STACKFRAME(&_hx_pos_e47a9afac0942eb9_66_onVLCStop)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Main_obj,onVLCStop,(void))

void Main_obj::onVLCSeek(){
            	HX_STACKFRAME(&_hx_pos_e47a9afac0942eb9_70_onVLCSeek)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Main_obj,onVLCSeek,(void))

void Main_obj::onVLCComplete(){
            	HX_STACKFRAME(&_hx_pos_e47a9afac0942eb9_74_onVLCComplete)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Main_obj,onVLCComplete,(void))

void Main_obj::onVLCProgress(){
            	HX_STACKFRAME(&_hx_pos_e47a9afac0942eb9_78_onVLCProgress)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Main_obj,onVLCProgress,(void))


hx::ObjectPtr< Main_obj > Main_obj::__new() {
	hx::ObjectPtr< Main_obj > __this = new Main_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< Main_obj > Main_obj::__alloc(hx::Ctx *_hx_ctx) {
	Main_obj *__this = (Main_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Main_obj), true, "Main"));
	*(void **)__this = Main_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Main_obj::Main_obj()
{
}

hx::Val Main_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"checkFile") ) { return hx::Val( checkFile_dyn() ); }
		if (HX_FIELD_EQ(inName,"onVLCPlay") ) { return hx::Val( onVLCPlay_dyn() ); }
		if (HX_FIELD_EQ(inName,"onVLCStop") ) { return hx::Val( onVLCStop_dyn() ); }
		if (HX_FIELD_EQ(inName,"onVLCSeek") ) { return hx::Val( onVLCSeek_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onVLCPause") ) { return hx::Val( onVLCPause_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"onVLCResume") ) { return hx::Val( onVLCResume_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"onVLCComplete") ) { return hx::Val( onVLCComplete_dyn() ); }
		if (HX_FIELD_EQ(inName,"onVLCProgress") ) { return hx::Val( onVLCProgress_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"onVlcVideoReady") ) { return hx::Val( onVlcVideoReady_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Main_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Main_obj_sStaticStorageInfo = 0;
#endif

static ::String Main_obj_sMemberFields[] = {
	HX_HCSTRING("checkFile","\x64","\x97","\x9b","\x97"),
	HX_HCSTRING("onVlcVideoReady","\x16","\xdc","\x3d","\xfa"),
	HX_HCSTRING("onVLCPlay","\xa2","\x19","\xbb","\x2e"),
	HX_HCSTRING("onVLCPause","\x88","\x23","\xc5","\xad"),
	HX_HCSTRING("onVLCResume","\xdb","\x1c","\xba","\x77"),
	HX_HCSTRING("onVLCStop","\xb0","\xdb","\xbc","\x30"),
	HX_HCSTRING("onVLCSeek","\x26","\x71","\xb1","\x30"),
	HX_HCSTRING("onVLCComplete","\x67","\x5b","\x33","\x6e"),
	HX_HCSTRING("onVLCProgress","\x5b","\x52","\x96","\x74"),
	::String(null()) };

static void Main_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Main_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Main_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Main_obj::__mClass,"__mClass");
};

#endif

hx::Class Main_obj::__mClass;

void Main_obj::__register()
{
	hx::Object *dummy = new Main_obj;
	Main_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("Main","\x59","\x64","\x2f","\x33");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Main_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Main_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Main_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Main_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Main_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Main_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

